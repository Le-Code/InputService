<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yao.dao.CourseFeedbackMapper">


    <resultMap id="CourseFeedback" type="com.yao.entity.CourseFeedback">
        <id property="id" column="id"></id>
        <result property="info" column="info"></result>
        <result property="feedTime" column="feed_time"></result>
        <result property="isRead" column="is_read"></result>
    </resultMap>

    <insert id="addFeedback" parameterType="com.yao.dao.CourseFeedbackMapper">
        insert into tb_course_feedback(info,feed_time,is_read) value (#{info},#{feedTime},#{isRead})
    </insert>

    <select id="selectAllFeedback" resultMap="CourseFeedback">
        select * from tb_course_feedback
        <if test="orderRule != null">
            order by feed_time ${orderRule}
        </if>
    </select>

    <select id="selectFeedbackIsReader" resultMap="CourseFeedback">
        select * from tb_course_feedback where is_read = #{isRead}
        <if test="orderRule != null">
            order by feed_time ${orderRule}
        </if>
    </select>

    <select id="selectFeedbackById" resultType="com.yao.entity.CourseFeedback">
        select * from tb_course_feedback where id = #{id}
    </select>

    <update id="updateFeedback" parameterType="com.yao.entity.CourseFeedback">
        update tb_course_feedback
        <set>
            info = #{info},
            feed_time = #{feedTime},
            is_read = #{isRead}
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="deleteFeedback">
        delete from tb_course_feedback where id = #{id}
    </delete>
</mapper>